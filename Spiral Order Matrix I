public class Solution {
    // DO NOT MODIFY THE ARGUMENTS WITH "final" PREFIX. IT IS READ ONLY
    public int[] spiralOrder(final int[][] A) {
        List<Integer> result=new ArrayList<>();
        if(A==null || A.length==0 || A[0].length==0){
            return new int[0];
        }
        int top=0,bottom=A.length-1,left=0,right=A[0].length-1;
        
        while(top<=bottom && left<=right){
            for(int i=left;i<=right;i++){
                result.add(A[top][i]);
                
            }
            top++;
            for(int i=top;i<=bottom;i++){
                result.add(A[i][right]);
            }
            right--;
            if(top<=bottom){
                for(int i=right;i>=left;i--){
                    result.add(A[bottom][i]);
                }
                bottom--;
            }
            if(left<=right){
                for(int i=bottom;i>=top;i--){
                    result.add(A[i][left]);
                }
                left++;
            }
        }
        int[] arr=new int[result.size()];
        for(int i=0;i<arr.length;i++){
            arr[i]=result.get(i);
    
        }
        return arr;
        
    }
}
